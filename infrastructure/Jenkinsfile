pipeline {
    agent any

    environment {
        DOCKER_PASSWORD = credentials("docker_password")
        GITHUB_TOKEN = credentials("github_token")
    }

    stages {
        stage('Build & Test') {
            steps {
                sh './gradlew clean build'
            }
        }

        stage('Prepare & Tag Image') {
            steps {
                script {
                    script {
                        sh([script: 'git fetch --tag', returnStdout: true]).trim()
                        env.MAJOR_VERSION = sh([script: 'git tag | sort --version-sort | tail -1 | cut -d . -f 1', returnStdout: true]).trim()
                        env.MINOR_VERSION = sh([script: 'git tag | sort --version-sort | tail -1 | cut -d . -f 2', returnStdout: true]).trim()
                        env.PATCH_VERSION = sh([script: 'git tag | sort --version-sort | tail -1 | cut -d . -f 3', returnStdout: true]).trim()
                    }
                    def NEW_TAG = "${MAJOR_VERSION}.\$((${MINOR_VERSION} + 1)).${PATCH_VERSION}"
                    sh "docker build -t tgeorget/hello-img:${NEW_TAG} ."

                    withCredentials([usernamePassword(credentialsId: 'docker_password', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
                        sh """
                            echo $PASSWORD | docker login docker.io -u $USERNAME --password-stdin
                            docker push tgeorget/hello-img:${NEW_TAG}
                        """
                    }

                    sh "git tag ${env.NEW_TAG}"
                    sh "git push https://$GITHUB_TOKEN@github.com/PE2024/service.git ${env.NEW_TAG}"

                }
            }
        }
    }
}